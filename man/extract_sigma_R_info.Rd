% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_sigma_R_info.R
\name{extract_sigma_R_info}
\alias{extract_sigma_R_info}
\title{Extract the `sigma_R_info` table from a data frame of recruitment parameters}
\usage{
extract_sigma_R_info(data, sigma_R_in)
}
\arguments{
\item{data}{A data frame of recruitment parameters or MCMC results, both of
which are available in the list returned from [SS_output].}

\item{sigma_R_in}{The input value used for sigma_R, this is also available in
the list output by [SS_output] and is used to scale the results.}
}
\value{
A data frame is returned with three rows and 10 columns. Rows provide
summary statistics for a given group of recruitments, where the
rows are additive in their inclusiveness, i.e., the data frames used to calculate
rows two and three include all data used in the calculations that led to the
results displayed in the first row. Columns include the following variables:
* `period`: Categories that specify which recruitments were included in the
subset used to calculate the summary.
* `N_devs`: The number of recruitment estimates used in the summary.
* `SD_of_devs`: The standard deviation (sd) of the recruitment deviations.
* `Var_of_devs`: The variance (var) of the recruitment deviations.
* `mean_SE`: The mean of the estimated standard error (se) of the recruitment
deviations, or more precisely, the mean of the `Parm_StDev` column of your data.
* `mean_SEsquared`: The mean of the squared estimates of standard error of the
recruitment deviations, i.e., `mean(Parm_StDev^2)`.
* `sqrt_sum_of_components`: The square root of the sum of the deviation and the
standard error.
* `SD_of_devs_over_sigma_R`: The scaled version of `SD_of_devs`.
* `sqrt_sum_over_sigma_R`: The scaled version of `sqrt_sum_of_components`.
* `alternative_sigma_R`: The suggested value for a new input sigma_R, which is
just a repeat of the sum of components column.
If the input data frame is `NULL`, then `NULL` is returned.
}
\description{
Extract the `sigma_R_info` table that is available in the object returned from
[SS_output]. Typically, this table is determined from MLE results, but this
function also offers the capability to calculate this info from the table of
MCMC results as well.
}
\examples{
# Read in simple model results
base <- SS_output(system.file("extdata", "simple_3.30.13", package = "r4ss"),
  verbose = FALSE, printstats = FALSE)
test <- extract_sigma_R_info(base[["recruitpars"]], base[["sigma_R_in"]])
testthat::expect_equivalent(base[["sigma_R_info"]], test)

}
